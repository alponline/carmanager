package org.carmanager.veiculo.configuration;

import org.apache.log4j.Logger;
import org.hsqldb.Server;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class DBServer {
    private Server hsqlDbServer;
    private Connection connection;
    private static final String DB_URL = "jdbc:hsqldb:hsql://localhost/CarmanagerDB";
    private static final String DRIVER_CLASS = "org.hsqldb.jdbc.JDBCDriver";
    private boolean initialized = false;
    private final boolean autoCommit = false;
    private static final Logger log = Logger.getLogger(RestApp.class);

    public void startDBServer(){
        if (hsqlDbServer==null){
            hsqlDbServer = new Server();
            hsqlDbServer.setDatabasePath(0,"/tmp/hsqldb/CarmanagerDB");
            hsqlDbServer.setDatabaseName(0, "CarmanagerDB");
            hsqlDbServer.start();
            log.info("db server - started");
        }
    }

    public void shutDownDBServer() throws SQLException {
        log.info("shutting down db server");
        if (connection!=null){
            connection.close();
            log.info("db server - connection closed");
        }
        if (hsqlDbServer!=null){
            hsqlDbServer.shutdown();
            log.info("db server - shutdown successful");
        }
    }

    private void createHSQLDBConnection() throws SQLException, ClassNotFoundException {
        Class.forName(DRIVER_CLASS);
        connection = DriverManager.getConnection(DB_URL);
        connection.setAutoCommit(autoCommit);
        log.info("db server - connection created");
    }

    public void initializeDB() throws Exception {
        try {
            if (!initialized){
                startDBServer();
                createHSQLDBConnection();
                dropTables();
                createTables();
                this.initialized = true;
            }
        } catch (Exception e) {
            shutDownDBServer();
            throw e;
        }
    }

    private void dropTables() throws SQLException {
        String sql = "DROP TABLE IF EXISTS TB_VEICULO";
        Statement st = null;
        try {
            st = connection.createStatement();
            st.executeUpdate(sql);
            connection.commit();
        }finally {
            if (st!=null)
                st.close();
        }
    }

    private void createTables() throws SQLException {
        String createEmployee =
                "CREATE TABLE " +
                        "TB_VEICULO(" +
                        "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,"+
                        "veiculo VARCHAR(30)," +
                        "marca VARCHAR(30)," +
                        "descricao VARCHAR(250)," +
                        "ano INTEGER," +
                        "vendido BOOLEAN," +
                        "created DATETIME," +
                        "updated DATETIME)";


        Statement st = connection.createStatement();
        try {
            st.executeUpdate(createEmployee);
            connection.commit();
        } finally {
            st.close();
        }
    }

    public Connection getConnection() {
        return connection;
    }
}
